name: Ubuntu - Codecov

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    strategy:
      matrix:
        include:
          # Ubuntu 20.04 + gcc-9
          - name: "Ubuntu 20.04 + gcc-9"
            os: ubuntu-20.04
            compiler: gcc
            version: "9"

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install packages
      run: sudo apt-get install -yq build-essential lcov python3-dev python3-pip python3-venv cmake wget unzip libxrandr-dev libxi-dev libxxf86vm-dev libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev libopenal-dev
    - name: Download and unzip glfw
      run: |
        wget https://github.com/glfw/glfw/releases/download/3.2.1/glfw-3.2.1.zip
        unzip glfw-3.2.1.zip
    - name: Install glfw
      run: |
        cd glfw-3.2.1
        cmake -DBUILD_SHARED_LIBS=true -DGLFW_BUILD_EXAMPLES=false -DGLFW_BUILD_TESTS=false -DGLFW_BUILD_DOCS=false .
        make install
        cd ..
    - name: Configure Compiler
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          echo "::set-env name=CC::gcc-${{ matrix.version }}"
          echo "::set-env name=CXX::g++-${{ matrix.version }}"
        else
          echo "::set-env name=CC::clang-${{ matrix.version }}"
          echo "::set-env name=CXX::clang++-${{ matrix.version }}"
        fi
    - name: Configure Build
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_COVERAGE=ON ..
    - name: Build
      run: cd build && make
    - name: Run Unit Test
      run: /home/runner/work/CubbyFlow/CubbyFlow/build/bin/UnitTests
    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash)